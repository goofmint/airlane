#!/usr/bin/env node
let inquirer = require("inquirer");
var fs = require('fs-extra');
require('../libs/common');
let util = require('./util');

let target_dir = fs.realpathSync('./');
let module_name = process.argv[2];

// Check directory
if (module_name.slice(-1) != '/') {
  module_name = module_name + "/";
}

var path = `${target_dir}/routes/${module_name}`

let paths = ['routes/index.js', 'routes/controller.js', 'routes/public/app.js', 'routes/public/app.css', 'routes/views/new.jade', 'routes/views/index.jade', 'routes/views/layout.jade', 'routes/views/edit.jade', 'routes/test/controller_test.js'];

require('./templates')(module_name, false)
  .then(results => {
    templates = results;
    var promises = util.checkFile(path, paths.map(path => path.replace(/^routes\//, "")));
    return util.doAsk(promises);
  }, error => {
    console.log(error)
    process.exit(1);
  })
  .then( answers => {
    createBase(answers);
  }, error => {
    console.log(error);
    process.exit(1);
  })

createBase = (answers = {}) => {
  fs.mkdirsSync(path);
  fs.mkdirsSync(`${path}views`);
  fs.mkdirsSync(`${path}public`);
  fs.mkdirsSync(`${path}test`);
  for (var i in paths) {
    var filename = paths[i];
    if (answers[`overwrite_${filename}`] !== false) {
      fs.writeFileSync(`${path}${filename.replace(/^routes\//, "")}`, templates[filename]);
    }
  }
}
